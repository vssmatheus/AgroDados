[{"C:\\Users\\MATEUS\\Documents\\GitHub\\agrodados\\src\\index.js":"1","C:\\Users\\MATEUS\\Documents\\GitHub\\agrodados\\src\\reportWebVitals.js":"2","C:\\Users\\MATEUS\\Documents\\GitHub\\agrodados\\src\\App.js":"3","C:\\Users\\MATEUS\\Documents\\GitHub\\agrodados\\src\\components\\Inicio.js":"4","C:\\Users\\MATEUS\\Documents\\GitHub\\agrodados\\src\\components\\Cadastrar.js":"5","C:\\Users\\MATEUS\\Documents\\GitHub\\agrodados\\src\\components\\Logar.js":"6","C:\\Users\\MATEUS\\Documents\\GitHub\\agrodados\\src\\auth\\RotaPrivada.js":"7","C:\\Users\\MATEUS\\Documents\\GitHub\\agrodados\\src\\auth\\AuthContext.js":"8","C:\\Users\\MATEUS\\Documents\\GitHub\\agrodados\\src\\auth\\config.js":"9","C:\\Users\\MATEUS\\Documents\\GitHub\\agrodados\\src\\components\\Dashboard.js":"10","C:\\Users\\MATEUS\\Documents\\GitHub\\agrodados\\src\\components\\Localidades.js":"11"},{"size":500,"mtime":499162500000,"results":"12","hashOfConfig":"13"},{"size":362,"mtime":499162500000,"results":"14","hashOfConfig":"13"},{"size":1242,"mtime":1608147636711,"results":"15","hashOfConfig":"13"},{"size":5729,"mtime":1608173223870,"results":"16","hashOfConfig":"13"},{"size":1873,"mtime":1608087599189,"results":"17","hashOfConfig":"13"},{"size":2562,"mtime":1608143590254,"results":"18","hashOfConfig":"13"},{"size":600,"mtime":1608038463821,"results":"19","hashOfConfig":"13"},{"size":690,"mtime":1608038463783,"results":"20","hashOfConfig":"13"},{"size":468,"mtime":1608038463861,"results":"21","hashOfConfig":"13"},{"size":1769,"mtime":1608386280825,"results":"22","hashOfConfig":"13"},{"size":247,"mtime":1608147547900,"results":"23","hashOfConfig":"13"},{"filePath":"24","messages":"25","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},"nvoqiy",{"filePath":"27","messages":"28","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"29","messages":"30","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"33","usedDeprecatedRules":"26"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"38","usedDeprecatedRules":"26"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"45"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"48","usedDeprecatedRules":"26"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},"C:\\Users\\MATEUS\\Documents\\GitHub\\agrodados\\src\\index.js",[],["51","52"],"C:\\Users\\MATEUS\\Documents\\GitHub\\agrodados\\src\\reportWebVitals.js",[],"C:\\Users\\MATEUS\\Documents\\GitHub\\agrodados\\src\\App.js",[],"C:\\Users\\MATEUS\\Documents\\GitHub\\agrodados\\src\\components\\Inicio.js",["53","54"],"import React from 'react';\r\nimport { withRouter } from \"react-router-dom\";\r\nimport { authConfig } from \"../auth/config\";\r\nimport clsx from 'clsx';\r\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\r\nimport Drawer from '@material-ui/core/Drawer';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport List from '@material-ui/core/List';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport MenuIcon from '@material-ui/icons/Menu';\r\nimport ChevronLeftIcon from '@material-ui/icons/ChevronLeft';\r\nimport ChevronRightIcon from '@material-ui/icons/ChevronRight';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport InboxIcon from '@material-ui/icons/MoveToInbox';\r\nimport DashboardIcon from '@material-ui/icons/Dashboard';\r\nimport MailIcon from '@material-ui/icons/Mail';\r\nimport LocationOnIcon from '@material-ui/icons/LocationOn';\r\nimport PowerSettingsNewIcon from '@material-ui/icons/PowerSettingsNew';\r\nimport LogoAgrodados from '../assets/pngs/LOGO-AGRODADOS-SAMPLE.png';\r\n\r\nconst drawerWidth = 240;\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    display: 'flex',\r\n  },\r\n  appBar: {\r\n    zIndex: theme.zIndex.drawer + 1,\r\n    transition: theme.transitions.create(['width', 'margin'], {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.leavingScreen,\r\n    }),\r\n  },\r\n  appBarShift: {\r\n    marginLeft: drawerWidth,\r\n    width: `calc(100% - ${drawerWidth}px)`,\r\n    transition: theme.transitions.create(['width', 'margin'], {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.enteringScreen,\r\n    }),\r\n  },\r\n  menuButton: {\r\n    marginRight: 36,\r\n  },\r\n  hide: {\r\n    display: 'none',\r\n  },\r\n  drawer: {\r\n    width: drawerWidth,\r\n    flexShrink: 0,\r\n    whiteSpace: 'nowrap',\r\n  },\r\n  drawerOpen: {\r\n    width: drawerWidth,\r\n    transition: theme.transitions.create('width', {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.enteringScreen,\r\n    }),\r\n  },\r\n  drawerClose: {\r\n    transition: theme.transitions.create('width', {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.leavingScreen,\r\n    }),\r\n    overflowX: 'hidden',\r\n    width: theme.spacing(7) + 1,\r\n    [theme.breakpoints.up('sm')]: {\r\n      width: theme.spacing(9) + 1,\r\n    },\r\n  },\r\n  toolbar: {\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n    justifyContent: 'flex-end',\r\n    padding: theme.spacing(0, 1),\r\n    // necessary for content to be below app bar\r\n    ...theme.mixins.toolbar,\r\n  },\r\n  content: {\r\n    flexGrow: 1,\r\n    padding: theme.spacing(3),\r\n  },\r\n}));\r\n\r\nexport const Inicio = ({ history }) => {\r\n  \r\n  const itemsList = [\r\n    {\r\n      text: \"Dashboard\",\r\n      icon: <DashboardIcon />,\r\n      onClick: () => history.push(\"/dashboard\")\r\n    },\r\n    {\r\n      text: \"Localidades\",\r\n      icon: <LocationOnIcon />,\r\n      onClick: () => history.push(\"/localidades\")\r\n    },\r\n    {\r\n      text: \"Contact\",\r\n      icon: <MailIcon />,\r\n      onClick: () => history.push(\"/dashboard\")\r\n    }\r\n  ];\r\n    const classes = useStyles();\r\n    const theme = useTheme();\r\n    const [open, setOpen] = React.useState(false);\r\n\r\n    const handleDrawerOpen = () => {\r\n        setOpen(true);\r\n    };\r\n\r\n    const handleDrawerClose = () => {\r\n        setOpen(false);\r\n    };\r\n\r\n\r\n    return (\r\n\r\n        <div className={classes.root}>\r\n      <CssBaseline />\r\n      <AppBar\r\n        position=\"fixed\"\r\n        className={clsx(classes.appBar, {\r\n          [classes.appBarShift]: open,\r\n        })}\r\n      >\r\n        <Toolbar style={{color: \"#555\", background: \"#ffffff\"}}>\r\n          <IconButton\r\n            color=\"inherit\"\r\n            aria-label=\"open drawer\"\r\n            onClick={handleDrawerOpen}\r\n            edge=\"start\"\r\n            className={clsx(classes.menuButton, {\r\n              [classes.hide]: open,\r\n            })}\r\n          >\r\n            <MenuIcon />\r\n          </IconButton>\r\n\r\n            {/* LOGO AGRODADOS */}\r\n          <img src={LogoAgrodados} alt=\"\" width=\"130px\"/>\r\n\r\n          <IconButton edge=\"end\" style={{marginLeft: \"auto\"}}>\r\n            <PowerSettingsNewIcon onClick={() => {if(window.confirm('Deseja sair da aplicação?')) {authConfig.auth().signOut()};}}/>\r\n          </IconButton>\r\n\r\n        </Toolbar>\r\n      </AppBar>\r\n\r\n      <Drawer  \r\n        variant=\"permanent\"\r\n        className={clsx(classes.drawer, {\r\n          [classes.drawerOpen]: open,\r\n          [classes.drawerClose]: !open,\r\n        })}\r\n        classes={{\r\n          paper: clsx({\r\n            [classes.drawerOpen]: open,\r\n            [classes.drawerClose]: !open,\r\n          }),\r\n        }}\r\n      >\r\n        <div className={classes.toolbar}>\r\n          <IconButton onClick={handleDrawerClose}>\r\n            {theme.direction === 'rtl' ? <ChevronRightIcon /> : <ChevronLeftIcon />}\r\n          </IconButton>\r\n        </div>\r\n        <Divider />\r\n\r\n        <List>\r\n        {itemsList.map((item, index) => {\r\n          const { text, icon, onClick } = item;\r\n          return (\r\n            <ListItem button key={text} onClick={onClick}>\r\n              {icon && <ListItemIcon>{icon}</ListItemIcon>}\r\n              <ListItemText primary={text} />\r\n            </ListItem>\r\n          );\r\n        })}\r\n      </List>\r\n      \r\n\r\n      </Drawer>\r\n      \r\n    </div>\r\n    );\r\n};\r\n\r\nexport default withRouter(Inicio);","C:\\Users\\MATEUS\\Documents\\GitHub\\agrodados\\src\\components\\Cadastrar.js",[],"C:\\Users\\MATEUS\\Documents\\GitHub\\agrodados\\src\\components\\Logar.js",["55"],"import React, {useCallback, useContext} from 'react';\r\nimport { Redirect, withRouter, Link } from \"react-router-dom\";\r\nimport { authConfig} from \"../auth/config\";\r\nimport { AuthContext } from \"../auth/AuthContext\";\r\nimport '../css/login.css';\r\nimport {CssBaseline} from '@material-ui/core';\r\nimport {Container} from '@material-ui/core';\r\nimport Logo from '../assets/pngs/LOGO-AGRODADOS-SAMPLE.png'\r\n\r\n\r\nexport const Logar = withRouter(({history}) => {\r\n    const loginFunc = useCallback(\r\n        async (event) =>{\r\n            event.preventDefault();\r\n\r\n            const { email, senha } = event.target.elements; \r\n\r\n            try{\r\n                await authConfig\r\n                .auth()\r\n                .signInWithEmailAndPassword(email.value, senha.value);\r\n                history.push('/');\r\n                \r\n            } catch (error) {\r\n                console.log(error);\r\n                alert(\"Email ou senha \\nInválidos !\");\r\n            }\r\n           \r\n        },\r\n        [history],\r\n    );\r\n\r\n    const {usuario} = useContext(AuthContext);\r\n\r\n    if(usuario){\r\n        return <Redirect to=\"/\" />\r\n    }\r\n\r\n    return (\r\n        <React.Fragment>\r\n            <CssBaseline />\r\n            <Container maxWidth=\"md\">\r\n                <div className=\"card-login\">\r\n                    {/* <h1>Entrar</h1> */}\r\n                    <img src={Logo} alt=\"\" width=\"250px\"/>\r\n                    <form onSubmit={loginFunc}>\r\n                        <div>\r\n                            <input className=\"input-email\" type=\"email\" placeholder=\"Email\" name=\"email\" required/>\r\n                        </div>\r\n                        <div>\r\n                            <input className=\"input-senha\" placeholder=\"Senha\" type=\"password\" name=\"senha\" required/>\r\n                        </div>                    \r\n                        {/* <button type=\"submit\">Logar</button> */}\r\n                        <div>\r\n                            <button className=\"matt-btn\" type=\"submit\" >Login</button>\r\n                        </div>\r\n                        <div className=\"options-login\">\r\n                            <a id=\"recuperarSenha\" href=\"#\">Recuperar senha</a>\r\n                            <span>|</span>\r\n                            {/* <a id=\"cadastrar\" href=\"/cadastrar\"> Cadastrar-se</a> */}\r\n                            <Link id=\"cadastrar\" to=\"/cadastrar\">Cadastrar-se</Link>\r\n                        </div>\r\n                    </form>\r\n                </div>\r\n            </Container>            \r\n        </React.Fragment>\r\n    );\r\n});","C:\\Users\\MATEUS\\Documents\\GitHub\\agrodados\\src\\auth\\RotaPrivada.js",[],"C:\\Users\\MATEUS\\Documents\\GitHub\\agrodados\\src\\auth\\AuthContext.js",[],"C:\\Users\\MATEUS\\Documents\\GitHub\\agrodados\\src\\auth\\config.js",[],["56","57"],"C:\\Users\\MATEUS\\Documents\\GitHub\\agrodados\\src\\components\\Dashboard.js",["58","59","60"],"import React from \"react\";\r\nimport { withRouter } from \"react-router-dom\";\r\nimport '../css/styles.css';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport Grid from '@material-ui/core/Grid';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    container: {\r\n      display: 'grid',\r\n      gridTemplateColumns: 'repeat(12, 1fr)',\r\n      gridGap: theme.spacing(3),\r\n    },\r\n    paper: {\r\n      padding: theme.spacing(1),\r\n      textAlign: 'center',\r\n      color: theme.palette.text.secondary,\r\n      whiteSpace: 'nowrap',\r\n      marginBottom: theme.spacing(1),\r\n    },\r\n    divider: {\r\n      margin: theme.spacing(2, 0),\r\n    },\r\n  }));\r\n\r\nexport const Dashboard = withRouter(({history}) => {\r\n    const classes = useStyles();\r\n    return (\r\n        <div className=\"content-app\">\r\n            <div className={classes.container}>\r\n                <div style={{ gridColumnEnd: 'span 3' }}>\r\n                <Paper className={classes.paper}>xs=3</Paper>\r\n                </div>\r\n                <div style={{ gridColumnEnd: 'span 3' }}>\r\n                <Paper className={classes.paper}>xs=3</Paper>\r\n                </div>\r\n                <div style={{ gridColumnEnd: 'span 3' }}>\r\n                <Paper className={classes.paper}>xs=3</Paper>\r\n                </div>\r\n                <div style={{ gridColumnEnd: 'span 3' }}>\r\n                <Paper className={classes.paper}>xs=3</Paper>\r\n                </div>\r\n                <div style={{ gridColumnEnd: 'span 12' }}>\r\n                <Paper className={classes.paper}>xs=12</Paper>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n});","C:\\Users\\MATEUS\\Documents\\GitHub\\agrodados\\src\\components\\Localidades.js",[],{"ruleId":"61","replacedBy":"62"},{"ruleId":"63","replacedBy":"64"},{"ruleId":"65","severity":1,"message":"66","line":11,"column":8,"nodeType":"67","messageId":"68","endLine":11,"endColumn":18},{"ruleId":"65","severity":1,"message":"69","line":20,"column":8,"nodeType":"67","messageId":"68","endLine":20,"endColumn":17},{"ruleId":"70","severity":1,"message":"71","line":58,"column":29,"nodeType":"72","endLine":58,"endColumn":61},{"ruleId":"61","replacedBy":"73"},{"ruleId":"63","replacedBy":"74"},{"ruleId":"65","severity":1,"message":"66","line":5,"column":8,"nodeType":"67","messageId":"68","endLine":5,"endColumn":18},{"ruleId":"65","severity":1,"message":"75","line":7,"column":8,"nodeType":"67","messageId":"68","endLine":7,"endColumn":15},{"ruleId":"65","severity":1,"message":"76","line":8,"column":8,"nodeType":"67","messageId":"68","endLine":8,"endColumn":12},"no-native-reassign",["77"],"no-negated-in-lhs",["78"],"no-unused-vars","'Typography' is defined but never used.","Identifier","unusedVar","'InboxIcon' is defined but never used.","jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement",["77"],["78"],"'Divider' is defined but never used.","'Grid' is defined but never used.","no-global-assign","no-unsafe-negation"]